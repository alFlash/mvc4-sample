<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountNumberName.Text" xml:space="preserve">
    <value>ECKAccountNumber</value>
  </data>
  <data name="AccountNumberRepeatName.Text" xml:space="preserve">
    <value>ECKAccountNumberRepeat</value>
  </data>
  <data name="btnAuthorize.Text" xml:space="preserve">
    <value>I Authorize This Transaction, Process My Order.</value>
  </data>
  <data name="btnProcessOrder.Text" xml:space="preserve">
    <value>Process Payment</value>
  </data>
  <data name="cmdContinue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="ECKAccountNumberRepeatImage.Text" xml:space="preserve">
    <value>boxter.gif</value>
  </data>
  <data name="ECKToolTipSkin.Text" xml:space="preserve">
    <value>Web20</value>
  </data>
  <data name="lblCCCVV2Number.Text" xml:space="preserve">
    <value>CVV Number</value>
  </data>
  <data name="lblCCExpiration.Text" xml:space="preserve">
    <value>Expiration</value>
  </data>
  <data name="lblCCNameOnCard.Text" xml:space="preserve">
    <value>Name On Card</value>
  </data>
  <data name="lblCCNumber.Text" xml:space="preserve">
    <value>Card Number</value>
  </data>
  <data name="lblCCOnFile.Text" xml:space="preserve">
    <value>Use Credit Card On File</value>
  </data>
  <data name="lblCCRememberInfo.Text" xml:space="preserve">
    <value>Remember My Card / Replace Card On File</value>
  </data>
  <data name="lblCCType.Text" xml:space="preserve">
    <value>Card Type</value>
  </data>
  <data name="lblECAccountHolderName.Text" xml:space="preserve">
    <value>Account Holder's Full Name</value>
  </data>
  <data name="lblECBankAccountNumber.Text" xml:space="preserve">
    <value>Bank Account Number</value>
  </data>
  <data name="lblECBankAccountNumber2.Text" xml:space="preserve">
    <value>Bank Account Number</value>
  </data>
  <data name="lblECBankRoutingNumber.Text" xml:space="preserve">
    <value>Bank Routing Number</value>
  </data>
  <data name="lblECCheckNumber.Text" xml:space="preserve">
    <value>Check Number</value>
  </data>
  <data name="lblECDriversLicense.Text" xml:space="preserve">
    <value>Driver's License </value>
  </data>
  <data name="lblECDriversLicenseState.Text" xml:space="preserve">
    <value>License State Abbriviation</value>
  </data>
  <data name="lbleckCheckType.Text" xml:space="preserve">
    <value>Check Type</value>
  </data>
  <data name="lbleckType.Text" xml:space="preserve">
    <value>Payment Type</value>
  </data>
  <data name="lblECSSN.Text" xml:space="preserve">
    <value>Social Security Number</value>
  </data>
  <data name="lblIDType.Text" xml:space="preserve">
    <value>Personal ID Type</value>
  </data>
  <data name="LoginFirst.Text" xml:space="preserve">
    <value>Please Login First</value>
  </data>
  <data name="RenewOrderNotCreated.Text" xml:space="preserve">
    <value>Renew order was not created yet.</value>
  </data>
  <data name="RoutingNumberName.Text" xml:space="preserve">
    <value>ECKRoutingNumber</value>
  </data>
  <data name="txtAccountNumberImage.Text" xml:space="preserve">
    <value>check_acct.jpg</value>
  </data>
  <data name="txtRequiredAuthorizationVerbiage.Text" xml:space="preserve">
    <value>For returned checks, there will be a fee charged with the amount listed in the &lt;a href="HtmlPage/ReturnedCheckFees.htm" target="_blank"&gt;Returned Check Fees&lt;/a&gt; Table.  &lt;br/&gt;&lt;br/&gt; Please click on &lt;a href="http://www.telecheck.com/ica/privacy_policy.html" target="_blank"&gt;TeleCheck Privacy Policy&lt;/a&gt; for privacy policy details.  &lt;br/&gt;&lt;br/&gt;  For questions, please check the &lt;a href="http://www.telecheck.com/ica/internetcheckfaq.html" target="_blank"&gt;TeleCheck Internet Check Acceptance FAQ&lt;/a&gt; and &lt;a href="http://www.telecheck.com/ica/internetevalfaq.html" target="_blank"&gt;TeleCheck Evaluation Process FAQ&lt;/a&gt;. You may also contact us at [MerchantPhoneNumber] during business hours for more questions.&lt;br/&gt;&lt;br/&gt; I authorize an electronic debit in the amount shown above. This withdrawal will be processed using the regular banking system.</value>
  </data>
  <data name="txtRoutingNumberImage.Text" xml:space="preserve">
    <value>check_routing.jpg</value>
  </data>
  <data name="Title.Text" xml:space="preserve">
    <value>Payment Process</value>
  </data>
</root>